(defwindow powermenu
  :stacking "bg"
  :windowtype "desktop"
  :wm-ignore false
  :geometry (geometry :width "100%" :height "100%")
  (powermenu_layout))
  ;(label :text "${time.hour}"))

(defwidget powermenu_layout []
  (box :class "layout-box"
       :space-evenly false
       :orientiation "vertical"
    (box :valign "start" 
         :space-evenly false
         :spacing 25
      (_battery :status {EWW_BATTERY.BAT0.status}
                :battery {EWW_BATTERY.BAT0.capacity}
                :charge "" :one "" :two "" :three ""
                :four "" :five "" :six "":seven ""))))

(defpoll time 
  :interval "5s"
  :initial `date +'{ "hour": "%H", "min": "%M" }'`
  `date +'{ "hour": "%H", "min": "%M" }'`)
  
(defwidget _buttons [shutdown shutdown_icon
                     reboot reboot_icon
                     logout logout_icon]
  (box :class "btnx-box" :spacing 5
       :vexpand true :hexpand true
       :valign "end" :halign "end"
       :space-evenly false
    (button :onclick shutdown shutdown_icon)
    (button :onclick reboot reboot_icon)
    (button :onclick logout logout_icon)))

(defwidget _network [strength offline excellent good okay slow]
  (box :class "net-box"
       :space-evenly false
       :spacing 8
    (label :text {strength == "" ? offline :
      strength > -70 ? excellent :
        strength > -85 ? good :
          strength > -100 ? okay : slow})))

(defwidget _battery [battery status one two three four five six seven charge]
  (box :class "bat-box"
       :space-evenly false
       :spacing 8
    (label :text {status == "Charging" ? charge :
      battery < 15 ? seven :
        battery < 30 ? six :
          battery < 45 ? five :
            battery < 60 ? four :
              battery < 75 ? three :
                battery < 95 ? two : one})))
